# Docker Compose - 開發環境
version: '3.8'

services:
  # MySQL 數據庫
  db:
    image: mysql:8.0
    container_name: counseling_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${MYSQL_DB:-mindcare_v2}
      MYSQL_USER: ${MYSQL_USER:-mindcare_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-mindcare_password}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_password}
      TZ: ${TZ:-Asia/Taipei}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - counseling_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Django 後端
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: counseling_backend
    restart: unless-stopped
    environment:
      - DEBUG=${DEBUG:-False}
      - MYSQL_DB=${MYSQL_DB:-mindcare_v2}
      - MYSQL_USER=${MYSQL_USER:-mindcare_user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-mindcare_password}
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1,backend,nginx}
      - TZ=${TZ:-Asia/Taipei}
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - counseling_network
    healthcheck:
      test: ["CMD", "python", "manage.py", "check", "--deploy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js 前端
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: counseling_frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL:-http://localhost:8000}
      - TZ=${TZ:-Asia/Taipei}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - counseling_network
    healthcheck:
      test: ["CMD", "node", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx 反向代理 (可選)
  nginx:
    image: nginx:alpine
    container_name: counseling_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - static_volume:/app/static:ro
      - media_volume:/app/media:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - counseling_network

# 網絡配置
networks:
  counseling_network:
    driver: bridge
    name: counseling_network

# 數據卷配置
volumes:
  mysql_data:
    name: counseling_mysql_data
  static_volume:
    name: counseling_static
  media_volume:
    name: counseling_media